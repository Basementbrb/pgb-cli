const key_platforms={valid:['ios','android','winphone','windows'],alias:{wp8:'winphone'}},app_platforms={valid:['ios','android','winphone'],alias:{windows:'winphone',wp8:'winphone'}},colours=require('../../util/colours');module.exports.args=a=>{if(pgb.opts.commands.length-1<a)throw pgb.print(colours.error(`command requires ${a} argument(s)`)),pgb.opts.short_usage=!0,require('../usage')(),new Error},module.exports.key_platform=(a,b)=>{const c=key_platforms.alias[a]||a||'';if(b&&''===c)throw new Error('no platform specified');else if(''!==c&&-1===key_platforms.valid.indexOf(c))throw new Error(`"${c}" is not a supported platform (ios,android,windows,winphone)`);return c},module.exports.platform=(a,b)=>{const c=app_platforms.alias[a]||a||'';if(b&&''===c)throw new Error('no platform specified');else if(''!==c&&-1===app_platforms.valid.indexOf(c))throw new Error(`"${c}" is not a supported platform (ios,android,windows)`);return c},module.exports.variables=(...a)=>{let b=[];for(let c of a){let a=pgb.opts.variables[c];(a===void 0||''===a)&&b.push(c)}if(0<b.length)throw new Error(`missing value(s) for "${b.join('", "')}"`)},module.exports.id=a=>{if((a||' ').match(/[^0-9]/))throw new Error(`"${a}" is not a valid id`);return a},module.exports.signed_in=()=>{if(!pgb.api.hasAuth())throw new Error('not signed-in')};