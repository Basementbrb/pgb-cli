const has=require('./helpers/validators'),payload=require('./helpers/payload'),unlockKey=require('./helpers/unlock-key'),merge=require('../util/misc').merge,complete=require('./helpers/complete');module.exports=()=>{let a={data:{}};has.args(1),has.signed_in();let b=has.key_platform(pgb.opts.commands[1],!0);const c=()=>{has.variables('title','alias','key'),payload.addFiles(a,'key:keystore'),payload.addVariables(a.data,'title','alias','default')},d=()=>{has.variables('title','key'),payload.addFiles(a,'key:keystore'),payload.addVariables(a.data,'title','default')},e=()=>{has.variables('title','key','profile'),payload.addFiles(a,'key:cert','profile'),payload.addVariables(a.data,'title','default')},f=()=>{if(has.variables('title','publisher_id'),!pgb.opts.variables.publisher_id.match(/[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}/))throw new Error('invalid publisher id');payload.addVariables(a.data,'title','publisher_id','default')};(()=>'android'===b?c():'windows'===b?d():'ios'===b?e():f())();let g=Promise.resolve();return pgb.opts.nounlock||'winphone'===b||(g=unlockKey(b).then(b=>{a.data=merge(b,a.data)})),g.then(()=>pgb.api.addKey(b,a)).then(a=>pgb.print({pretty:`${pgb.colours.bold(b)} key ${pgb.colours.bold(a.id)} added`,json:a,bare:a.id}))},module.exports.completion=()=>complete.platform(!0);