const merge=require('./misc').merge;module.exports=a=>new Promise((b,c)=>{let d={commands:[],variables:{}},e={},f={},g={};const h=b=>{for(let c of b)for(let b in a.flags)if(c===b||0<=a.flags[b].indexOf(c)){d[b]=!0;break}},i=a=>{let b=a.split('=');e[b.shift().toLowerCase()]=b.join('=')};let j=process.argv.slice(2);for(let a of j)a.startsWith('--')?h([a.replace(/-/g,'')]):a.startsWith('-')?h(a.slice(1)):-1<a.indexOf('=')?i(a):d.commands.push(a.toLowerCase());for(let e in d.commands[0]&&(d.commands[0]=a.aliases[d.commands[0]]||d.commands[0]),process.env){let a=e.toLowerCase();a.startsWith('pgb_')&&(a=a.slice(4),f[a]=process.env[e])}if(process.stdin.isTTY)return d.variables=merge(f,e),b(d);let k=[];process.stdin.on('data',a=>k.push(a)),process.stdin.once('end',()=>{let a=k.join('').trim();if(0<a.length)try{g=JSON.parse(a)}catch(a){return c(new Error('piped data is invalid json'))}return d.variables=merge(f,g,e),b(d)})});