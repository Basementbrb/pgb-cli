const util=require('util'),session=require('./util/session'),parseArgs=require('./util/args'),colours=require('./util/colours'),version=require('../package.json').version,api=require('pgb-api')({events:process,baseUrl:process.env.PGB_API_URL,headers:{"User-Agent":`pgb-cli/${version} node/${process.version} (${process.platform})`}});class PGB{constructor(){this.colours=colours,this.moduleVersion=version,this.api=api,this.session=session,this.cliOpts={flags:{version:'v',bare:'b',ascii:'a',json:'j',debug:'d',noprogress:'',help:'?h',force:'fy',completion:'',stdout:'s',nocolours:'c',nounlock:'',exit:'e',exitcode:''},variables:{ignore:!0,keystore_password:!1,key_password:!1,auth_token:!1,publisher_id:!1,title:!1,profile:!1,key:!1,default:!1,lock:!1,alias:!1,hydrates:!1,share:!1,tag:!1,debug:!1,private:!1,pull:!1,zip:!1,"android-phonegap":!1,"winphone-phonegap":!1,"ios-phonegap":!1,phonegap:!1,"android-key":!1,"windows-key":!1,"ios-key":!1,"winphone-key":!1},aliases:{add:'new',create:'new',"add-key":'new-key',"create-key":'new-key',clone:'pull',delete:'rm',"delete-key":'rm-key',apps:'ls',list:'ls',"ls-keys":'keys',"list-keys":'keys',cordovas:'phonegaps',signin:'login',"sign-in":'login',signout:'logout',"sign-out":'logout',"unlock-key":'unlock',me:'whoami'}}}error(a){console.error(this.colours.error(a))}debug(a){this.opts.debug&&('string'==typeof a?console.error(this.colours.debug(a)):console.error(this.colours.debug(util.inspect(a,{maxArrayLength:null,breakLength:70,depth:5}))))}print(a){'string'==typeof a&&(a={pretty:a}),this.opts.json?a.json&&console.log(JSON.stringify(a.json)):this.opts.bare?a.bare&&console.log(a.bare):a.pretty&&'string'==typeof a.pretty?console.log(colours.default(a.pretty)):a.pretty&&console.log(util.inspect(a.pretty,{colors:!0,maxArrayLength:null,breakLength:70,depth:5}))}runCommand(a){let b,c;this.opts=a,this.api.addAuth(this.opts.variables.auth_token||this.session.load().authtoken),this.colours.disabled=this.opts.nocolours,this.opts.ascii=this.opts.ascii||'win32'===process.platform,process.on('debug',pgb.debug.bind(this)),b=this.opts.commands[0]||'usage',b=b.toLowerCase(),this.opts.completion?b='completion':this.opts.version?b='version':(this.opts.help||b.match(/[^-a-z]+/i))&&(b='usage');try{c=require(`./commands/${b}`)}catch(a){pgb.debug(a),c=require('./commands/usage')}return c()}handleError(a){a&&(401===a.statusCode?this.error('not signed in'):'ENOENT'===a.code?this.error(`file or directory not found: ${a.path}`):'EACCES'===a.code?this.error(`file or directory cannot be opened: ${a.path}`):'ENOTDIR'===a.code?this.error(`directory cannot be created: ${a.path}`):a.error?this.error(this.htmlDecode(a.error)):a instanceof Error?a.message&&this.error(this.htmlDecode(a.message)):this.error(this.htmlDecode(a))),process.exit(1)}htmlDecode(a){return(a+'').replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&quot;/g,'"').replace(/&#39;/g,'\'').replace(/&amp;/g,'&')}run(){return parseArgs(pgb.cliOpts).then(a=>this.runCommand(a)).catch(a=>this.handleError(a))}}module.exports=()=>new PGB;